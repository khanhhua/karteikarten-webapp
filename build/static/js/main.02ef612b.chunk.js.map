{"version":3,"sources":["appHistory.js","reducers/auth.js","reducers/card-collection.js","reducers/review.js","reducers/network.js","reducers/index.js","constants.js","sagas/utils.js","sagas/auth.js","sagas/card-collection.js","sagas/review.js","sagas/index.js","store.js","components/AppNavbar.js","pages/LoginPage.js","components/CollectionList.js","pages/HomePage.js","pages/CreateCollectionPage.js","pages/CollectionListPage.js","components/CardModal.js","components/CardActionsModal.js","pages/CollectionEditPage.js","pages/CollectionReviewPage.js","App.js","serviceWorker.js","index.js"],"names":["createHashHistory","initialState","loggedIn","newCollection","newCard","editCollection","collections","reviewCollection","cardIndex","scorecards","busy","error","combineReducers","routing","routerReducer","network","state","action","status","auth","type","localStorage","setItem","accessToken","removeItem","coreData","collection","items","id","item_ids","concat","card","map","item","review","complete","scorecard","request","url","method","a","async","body","getItem","fetch","headers","Authorization","JSON","stringify","response","json","text","get","make","baseUrl","post","path","patch","doLogin","process","authData","id_token","tokenId","payload","ok","put","access_token","replace","takeEvery","doCreateCollection","doAddNewCardToCollection","doFetchCollections","doFetchRecentCollections","doViewCollection","doUpdateCollection","doUpdateCardInCollection","doCopyCardToCollection","doCloneCardToCollection","doMoveCardBetweenCollections","cardPayload","collectionPayload","collectionId","collectionsPayload","cardId","toCollectionId","select","editedCollectionId","front","back","clonedId","fromCollectionId","fromCollection","toCollection","filter","fromCollectionPayload","toCollectionPayload","doReviewCollection","doAnswerMatch","collection_id","sort","Math","round","random","itemsWithChoices","sourceItems","choices","Array","min","length","fill","choice","count","splice","floor","answer","corrects","wrongs","scorecardPayload","correct","rootSaga","all","cardAndCollection","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","compose","sagaMiddleware","createSagaMiddleware","routerMW","routerMiddleware","appHistory","connect","dispatch","className","children","Navbar","Nav","NavItem","NavbarBrand","onClick","approvalPrompt","clientId","scope","onSuccess","onFailure","HealthIndicator","stats","corrects_ratio","icon","faSmile","title","faSadCry","CollectionList","ListGroup","flush","ListGroupItem","ButtonGroup","Button","size","color","push","faLayerGroup","defaultProps","HomePage","isLoading","useEffect","Container","Row","Col","widths","Modal","isOpen","ModalBody","undefined","params","useParams","useState","setCollection","isPristine","setCard","step","Label","Input","value","placeholder","onChange","target","CardModal","editCard","onSave","onClose","ModalHeader","Form","FormGroup","row","inline","ModalFooter","isNew","onAccept","setChoice","setCollections","fetchCollections","useCallback","setCollectionId","name","then","editedCollection","cardModalShown","setCardModalShown","editCardModalShown","setEditCardModalShown","setEditCard","cardActionsModalShown","setCardActionsModalShown","NavLink","href","onBlur","key","lastScorecard","Table","responsive","skippeds","store","createStore","rootReducer","applyMiddleware","run","configureStore","App","history","exact","component","LoginPage","CreateCollectionPage","CollectionListPage","CollectionEditPage","CollectionReviewPage","to","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mVAEeA,gB,+BCATC,EAAe,CACnBC,UAAU,GCMND,EAAe,CACnBE,cAAe,KACfC,QAAS,KACTC,eAAgB,KAChBC,YAAa,ICLTL,EAAe,CACnBM,iBAAkB,KAClBC,UAAW,EACXC,WAAY,ICTRR,EAAe,CACnBS,MAAM,EACNC,MAAO,MCIMC,cAAgB,CAC7BC,QAASC,gBACTC,QDHa,WAAiC,IAAhCC,EAA+B,uDAAzBf,EAAcgB,EAAW,uCAC7C,MER4B,YFQxBA,EAAOC,OACF,eACFF,EADL,CAEEN,MAAM,IEVgB,UFYfO,EAAOC,OACT,eACFF,EADL,CAEEN,MAAM,EACNC,MAAOM,EAAON,QEfU,YFiBjBM,EAAOC,OACT,eACFF,EADL,CAEEL,MAAO,KACPD,MAAM,IAIHT,GChBPkB,KJLa,WAAiC,IAAhCH,EAA+B,uDAAzBf,EAAcgB,EAAW,uCAC7C,GKP4B,YLOxBA,EAAOC,OACT,OAAOF,EAGT,OAAQC,EAAOG,MACb,IKRwB,QLStB,MKXwB,YLWpBH,EAAOC,QACTG,aAAaC,QAAQ,eAAgBL,EAAOM,aACrC,eACFP,EADL,CAEEd,UAAU,MAGZmB,aAAaG,WAAW,gBACjB,eACFR,EADL,CAEEd,UAAU,KAIhB,QAAS,OAAOc,IIflBS,SHIa,WAAiC,IAAhCT,EAA+B,uDAAzBf,EAAcgB,EAAW,uCAC7C,GIjB4B,YJiBxBA,EAAOC,OACT,OAAOF,EAGT,OAAQC,EAAOG,MACb,IIjB6B,oBJkB3B,MIrBwB,YJqBpBH,EAAOC,OACF,eACFF,EADL,CAEEb,cAAc,eACTc,EAAOS,WADC,CAEXC,MAAO,OAKNX,EAET,II7ByC,gCJ8BvC,MIlCwB,YJkCpBC,EAAOC,QACLF,EAAMb,eAAiBc,EAAOS,WAAWE,KAAOZ,EAAMb,cAAcyB,GAC/D,eACFZ,EADL,CAEEb,cAAc,eACTa,EAAMb,cADE,CAEX0B,SAAUb,EAAMb,cAAc0B,SAASC,OAAOb,EAAOc,KAAKH,IAC1DD,MAAOX,EAAMb,cAAcwB,MAAMG,OAAOb,EAAOc,QAEjD3B,QAASa,EAAOc,OAKff,EAET,II5CqC,4BJ6CnC,GInDwB,YJmDpBC,EAAOC,OAA2B,CACpC,IAAMb,EAAc,eACfY,EAAOS,WADQ,CAElBC,MAAOV,EAAOS,WAAWC,MAAMK,KAAI,SAAAC,GACjC,OAAIA,EAAKL,KAAOX,EAAOc,KAAKH,GACnBX,EAAOc,KAGTE,OAIX,OAAO,eACFjB,EADL,CAEEX,mBAGJ,OAAOW,EAET,II/D6B,oBJgE7B,II/DoC,2BJgElC,MIxEwB,YJwEpBC,EAAOC,OACF,eACFF,EADL,CAEEV,YAAaW,EAAOX,cAIjBU,EAET,IIvE2B,kBJwEzB,MIlFwB,YJkFpBC,EAAOC,OACF,eACFF,EADL,CAEEX,eAAe,eACVY,EAAOS,cAKTV,EAET,QAAS,OAAOA,IGlFlBkB,OFCa,WAAiC,IAAhClB,EAA+B,uDAAzBf,EAAcgB,EAAW,uCAC7C,GGf4B,YHexBA,EAAOC,OACT,OAAOF,EAGT,OAAQC,EAAOG,MACb,IGL6B,oBHM3B,MGnBwB,YHmBpBH,EAAOC,OACF,eACFF,EADL,CAEEP,WAAY,GACZF,iBAAiB,eACZU,EAAOS,YAEZlB,UAAWS,EAAOT,UAClB2B,UAAU,IAIPnB,EAET,IGlBuB,cHmBrB,MGlCwB,YHkCpBC,EAAOC,OACF,eACFF,EADL,CAEER,UAAWS,EAAOT,YAIfQ,EAET,IG7BwB,eH8BtB,MG5CwB,YH4CpBC,EAAOC,OACF,eACFF,EADL,CAEEP,WAAYO,EAAMP,WAAWqB,OAAOb,EAAOmB,aAIxCpB,EAET,IGrCyB,gBHsCvB,MGtDwB,YHsDpBC,EAAOC,OACF,eACFF,EADL,CAEEmB,UAAU,IAIPnB,EAET,QAAS,OAAOA,M,wBIjEpB,SAAeqB,EAAQC,EAAKC,GAA5B,+BAAAC,EAAAC,OAAA,uDAAoCC,EAApC,+BAAyC,KACjCnB,EAAcF,aAAasB,QAAQ,gBAD3C,WAAAH,EAAA,MAGyBI,MAAMN,EAAK,CAChCC,SACAM,QAAQ,aACN,eAAgB,oBACZtB,EAAc,CAChBuB,cAAc,UAAD,OAAYvB,IACvB,IAENmB,KAAMA,GAAQK,KAAKC,UAAUN,MAXjC,aAGQO,EAHR,QAce/B,OAAS,KAdxB,yCAeW+B,EAASC,QAfpB,gCAiBWD,EAASE,QAjBpB,sCA6BO,SAAeC,EAAId,GAAnB,SAAAE,EAAAC,OAAA,yEACEJ,EAAQC,EAAK,QADf,qCAIA,IAAMe,EAAO,SAACC,GAAD,MAAc,CAChCC,KADgC,SAC3BC,EAAMd,GACT,OAdG,SAAoBJ,EAAKI,GAAzB,SAAAF,EAAAC,OAAA,yEACEJ,EAAQC,EAAK,OAAQI,IADvB,qCAcIa,CAAK,GAAD,OAAID,GAAJ,OAAcE,GAAQd,IAEnCe,MAJgC,SAI1BD,EAAMd,GACV,OAbG,SAAqBJ,EAAKI,GAA1B,SAAAF,EAAAC,OAAA,yEACEJ,EAAQC,EAAK,QAASI,IADxB,qCAaIe,CAAM,GAAD,OAAIH,GAAJ,OAAcE,GAAQd,IAEpCU,IAPgC,SAO5BI,GACF,OAAOJ,EAAI,GAAD,OAAIE,GAAJ,OAAcE,O,WClClBE,G,cAFFH,EAASF,EAAKM,2CAAdJ,KAER,SAAUG,EAAQzC,GAAlB,yEAEkB,OADR2C,EAAa3C,EAAb2C,SADV,SAEwBL,EAAK,iBAAkB,CAC3CM,SAAUD,EAASE,UAHvB,WAEQC,EAFR,QAMeC,GANf,gBAOI,OAPJ,SAOUC,YAAI,CAAE7C,KFVY,QEUQF,OFbR,QEa8BP,MAAOoD,EAAQpD,QAPzE,8BASI,OATJ,UASUsD,YAAI,CAAE7C,KFZY,QEYQF,OFdN,UEc8BK,YAAawC,EAAQG,eATjF,QAUI,OAVJ,UAUUD,YAAIE,kBAAQ,MAVtB,wCAce,8EACb,OADa,SACPC,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MFlBU,UEkBYE,GFtBV,YEsBmCF,IAA2BwC,GAD7E,uC,uBCCLW,G,WAYAC,G,WA4BAC,I,WAcAC,I,WAeAC,I,WAeAC,I,WAeAC,I,WAiBAC,I,WA2BAC,I,WAwCAC,I,iBAzLmBzB,EAAKM,2CAA1BP,E,EAAAA,IAAKK,E,EAAAA,MAAOF,E,EAAAA,KAEpB,SAAUc,EAAmBpD,GAA7B,yEAEkB,OADRS,EAAeT,EAAfS,WADV,SAEwB6B,EAAK,eAAgB7B,GAF7C,WAEQqC,EAFR,QAIeC,GAJf,gBAKI,OALJ,SAKUC,YAAI,CAAE7C,KHtBiB,oBGsBQF,OH1Bb,QG0BmCP,MAAOoD,EAAQpD,QAL9E,8BAOI,OAPJ,UAOUsD,YAAI,CAAE7C,KHxBiB,oBGwBQF,OH3BX,UG2BmCQ,WAAYqC,EAAQrC,aAPrF,QAQI,OARJ,UAQUuC,YAAIE,kBAAQ,8BARtB,wCAYA,SAAUG,EAAyBrD,GAAnC,+EAEsB,OADZG,EAA2BH,EAA3BG,KAAMM,EAAqBT,EAArBS,WAAYK,EAASd,EAATc,KAD5B,SAE4BwB,EAAK,SAAUxB,GAF3C,WAEQgD,EAFR,QAGmBf,GAHnB,gBAII,OAJJ,SAIUC,YAAI,CAAE7C,OAAMF,OHrCM,QGqCgBP,MAAOoE,EAAYpE,QAJ/D,wCAQ4B,OAR5B,UAQkC8C,EAAM,gBAAD,OAAiB/B,EAAWE,IAAM,CACrEC,SAAUH,EAAWG,SAASC,OAAOiD,EAAYhD,KAAKH,MAT1D,WAQQoD,EARR,OAWOD,EAAYf,GAXnB,iBAYI,OAZJ,UAYUC,YAAI,CAAE7C,OAAMF,OH7CM,QG6CgBP,MAAOqE,EAAkBrE,QAZrE,6CH5B6C,kCG4CvCS,EAhBN,iBAiBI,OAjBJ,UAiBU6C,YAAI,CACR7C,OACAF,OHnDwB,UGoDxBQ,WAAYsD,EAAkBtD,WAC9BK,KAAMgD,EAAYhD,OArBxB,gCAwBI,OAxBJ,UAwBU0C,GAAiB,CAAEQ,aAAcD,EAAkBtD,WAAWE,KAxBxE,wCA4BA,SAAU2C,GAAmBtD,GAA7B,uEAC6B,OAD7B,SACmCmC,EAAI,+BADvC,WACQ8B,EADR,QAE0BlB,GAF1B,gBAGI,OAHJ,SAGUC,YAAI,CAAE7C,KHxDiB,oBGwDQF,OHhEb,QGgEmCP,MAAOuE,EAAmBvE,QAHzF,wCAOE,OAPF,SAOQsD,YAAI,CACR7C,KH7D6B,oBG8D7BF,OHrE0B,UGsE1BZ,YAAa4E,EAAmB5E,cAVpC,uCAcA,SAAUkE,GAAyBvD,GAAnC,yEAE6B,OADnBG,EAASH,EAATG,KADV,SAEmCgC,EAAI,sCAFvC,WAEQ8B,EAFR,QAG0BlB,GAH1B,gBAII,OAJJ,SAIUC,YAAI,CAAE7C,OAAMF,OH/EM,QG+EgBP,MAAOuE,EAAmBvE,QAJtE,wCAQE,OARF,UAQQsD,YAAI,CACR7C,OACAF,OHpF0B,UGqF1BZ,YAAa4E,EAAmB5E,cAXpC,wCAeA,SAAUmE,GAAiBxD,GAA3B,yEAE4B,OADlBgE,EAAiBhE,EAAjBgE,aADV,SAEkC7B,EAAI,gBAAD,OAAiB6B,IAFtD,WAEQD,EAFR,QAGyBhB,GAHzB,gBAII,OAJJ,SAIUC,YAAI,CAAE7C,KHnFe,kBGmFQF,OH9FX,QG8FiCP,MAAOqE,EAAkBrE,QAJtF,wCAQE,OARF,UAQQsD,YAAI,CACR7C,KHxF2B,kBGyF3BF,OHnG0B,UGoG1BQ,WAAYsD,EAAkBtD,aAXlC,wCAeA,SAAUgD,GAAmBzD,GAA7B,6EAE4B,OAF5B,EACgDA,EAAtCS,WAAcE,EADxB,EACwBA,GAAOF,EAD/B,+BAEkC+B,EAAM,gBAAD,OAAiB7B,GAAMF,GAF9D,WAEQsD,EAFR,QAGyBhB,GAHzB,gBAII,OAJJ,SAIUC,YAAI,CAAE7C,KHjGiB,oBGiGQF,OH7Gb,QG6GmCP,MAAOqE,EAAkBrE,QAJxF,wCAQE,OARF,UAQQsD,YAAI,CACR7C,KHtG6B,oBGuG7BF,OHlH0B,UGmH1BQ,WAAYsD,EAAkBtD,aAXlC,wCAeA,SAAUiD,GAAyB1D,GAAnC,iFAEsB,OADZG,EAA4CH,EAA5CG,KAAMM,EAAsCT,EAAtCS,WADhB,EACsDT,EAA1Bc,KAAQH,EADpC,EACoCA,GAAOG,EAD3C,+BAE4B0B,EAAM,UAAD,OAAW7B,GAAMG,GAFlD,WAEQgD,EAFR,QAImBf,GAJnB,gBAKI,OALJ,SAKUC,YAAI,CAAE7C,OAAMF,OH7HM,QG6HgBP,MAAOoE,EAAYpE,QAL/D,wCASE,OATF,UASQsD,YAAI,CACR7C,OACAF,OHlI0B,UGmI1BQ,aACAK,KAAMgD,EAAYhD,OAbtB,wCAiBA,SAAU6C,GAAuB3D,GAAjC,mFAE6B,OADnBG,EAAiCH,EAAjCG,KAAM+D,EAA2BlE,EAA3BkE,OAAQC,EAAmBnE,EAAnBmE,eADxB,SAEmCC,aAAO,SAAArE,GAAK,OAAIA,EAAMS,SAASpB,eAAeuB,MAFjF,OAIyB,OAFjB0D,EAFR,gBAI+BlC,EAAI,gBAAD,OAAiBgC,IAJnD,mBAIU1D,EAJV,EAIUA,WAJV,iBAMI,OANJ,UAMUuC,YAAI,CAAE7C,KH5HS,YG4HQF,OH/IL,QG+I2BP,MAAO,yBAN9D,0CAS4B,OAT5B,UASkC8C,EAAM,gBAAD,OAAiB2B,GAAjB,eAChC1D,EADgC,CAEnCG,SAAUH,EAAWG,SAASC,OAAOqD,MAXzC,YASQH,EATR,QAayBhB,GAbzB,iBAcI,OAdJ,UAcUC,YAAI,CAAE7C,KHpIS,YGoIQF,OHvJL,QGuJ2BP,MAAOqE,EAAkBrE,QAdhF,0CAkBE,OAlBF,UAkBQsD,YAAI,CACR7C,OACAF,OH5J0B,UG6J1BQ,WAAYsD,EAAkBtD,aArBlC,QAwBE,OAxBF,UAwBQ+C,GAAiB,CAAEQ,aAAcK,IAxBzC,wCA2BA,SAAUT,GAAwB5D,GAAlC,2FAGmB,OAFTG,EAAiCH,EAAjCG,KAAM+D,EAA2BlE,EAA3BkE,OAAQC,EAAmBnE,EAAnBmE,eADxB,SAGyBhC,EAAI,UAAD,OAAW+B,IAHvC,mBAGUpD,EAHV,EAGUA,KAHV,gBAKI,OALJ,SAKUkC,YAAI,CAAE7C,KHrJU,aGqJQF,OHzKN,QGyK4BP,MAAO,mBAL/D,wCAQ0C,OAR1C,UAQgD4C,EAAK,SAAU,CAC3DgC,MAAOxD,EAAKwD,MACZC,KAAMzD,EAAKyD,OAVf,wBAQUzD,KAAY0D,GARtB,aAQmC,GARnC,GAQkB7D,GARlB,iBAaI,OAbJ,UAaUqC,YAAI,CAAE7C,KH7JU,aG6JQF,OHjLN,QGiL4BP,MAAO,mBAb/D,0CAiByB,OAjBzB,UAiB+ByC,EAAI,gBAAD,OAAiBgC,IAjBnD,oBAiBU1D,EAjBV,EAiBUA,WAjBV,iBAmBI,OAnBJ,UAmBUuC,YAAI,CAAE7C,KHnKU,aGmKQF,OHvLN,QGuL4BP,MAAO,yBAnB/D,0CAsB4B,OAtB5B,UAsBkC8C,EAAM,gBAAD,OAAiB2B,GAAjB,eAChC1D,EADgC,CAEnCG,SAAUH,EAAWG,SAASG,KAAI,SAAAC,GAAI,OAAIA,IAASkD,EAASM,EAAWxD,QAxB3E,YAsBQ+C,EAtBR,QA0ByBhB,GA1BzB,iBA2BI,OA3BJ,UA2BUC,YAAI,CAAE7C,KH3KU,aG2KQF,OH/LN,QG+L4BP,MAAOqE,EAAkBrE,QA3BjF,0CA+BE,OA/BF,UA+BQsD,YAAI,CACR7C,OACAF,OHpM0B,UGqM1BQ,WAAYsD,EAAkBtD,aAlClC,QAqCE,OArCF,UAqCQ+C,GAAiB,CAAEQ,aAAcG,IArCzC,wCAwCA,SAAUN,GAA6B7D,GAAvC,yFAGyC,OAF/BG,EAAmDH,EAAnDG,KAAM+D,EAA6ClE,EAA7CkE,OAAQO,EAAqCzE,EAArCyE,iBAAkBN,EAAmBnE,EAAnBmE,eAD1C,SAG+ChC,EAAI,gBAAD,OAAiBsC,IAHnE,mBAGsBC,EAHtB,EAGUjE,WAHV,gBAKI,OALJ,SAKUuC,YAAI,CAAE7C,KH/LS,YG+LQF,OHjNL,QGiN2BP,MAAO,yBAL9D,wCASuC,OATvC,UAS6CyC,EAAI,gBAAD,OAAiBgC,IATjE,oBASsBQ,EATtB,EASUlE,WATV,iBAWI,OAXJ,UAWUuC,YAAI,CAAE7C,KHrMS,YGqMQF,OHvNL,QGuN2BP,MAAO,yBAX9D,0CAcgC,OAdhC,UAcsC8C,EAAM,gBAAD,OAAiBiC,GAAjB,eACpCC,EADoC,CAEvC9D,SAAU8D,EAAe9D,SAASgE,QAAO,SAAA5D,GAAI,OAAIA,IAASkD,QAhB9D,YAcQW,EAdR,QAkB6B9B,GAlB7B,iBAmBI,OAnBJ,UAmBUC,YAAI,CAAE7C,KH5MS,YG4MQF,OH/NL,QG+N2BP,MAAOmF,EAAsBnF,QAnBpF,0CAuB8B,OAvB9B,UAuBoC8C,EAAM,gBAAD,OAAiB2B,GAAjB,eAClCQ,EADkC,CAErC/D,SAAU+D,EAAa/D,SAASC,OAAOqD,MAzB3C,YAuBQY,EAvBR,QA2B2B/B,GA3B3B,iBA4BI,OA5BJ,UA4BUC,YAAI,CAAE7C,KHrNS,YGqNQF,OHxOL,QGwO2BP,MAAOoF,EAAoBpF,QA5BlF,0CAgCE,OAhCF,UAgCQsD,YAAI,CACR7C,OACAF,OH7O0B,YG2M9B,QAqCE,OArCF,UAqCQuD,GAAiB,CAAEQ,aAAcS,IArCzC,wCAwCe,+EACb,OADa,SACPtB,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MHjPe,sBGiPOE,GHtPV,YGsPwCF,IAA2BmD,GADlF,OAEb,OAFa,SAEPD,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,OHjP2B,kCGiPJE,GHhPA,8BGgP0CA,IHvPrD,YGwPvBF,IAA2BoD,GAHnB,OAIb,OAJa,SAIPF,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MHjPuB,8BGiPDE,GHzPV,YGyPgDF,IAA2ByD,IAJ1F,OAKb,OALa,SAKPP,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MHjPe,sBGiPOE,GH1PV,YG0PwCF,IAA2BqD,IALlF,OAMb,OANa,UAMPH,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MHjPsB,6BGiPAE,GH3PV,YG2P+CF,IAA2BsD,IANzF,QAOb,OAPa,UAOPJ,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MHhPa,oBGgPSE,GH5PV,YG4PsCF,IAA2BuD,IAPhF,QAQb,OARa,UAQPL,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MHhPe,sBGgPOE,GH7PV,YG6PwCF,IAA2BwD,IARlF,QASb,OATa,UASPN,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MH1OO,cG0OeE,GH9PV,YG8PgCF,IAA2B0D,IAT1E,QAUb,OAVa,UAUPR,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MH5OO,cG4OeE,GH/PV,YG+PgCF,IAA2B4D,IAV1E,QAWb,OAXa,UAWPV,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MH3OQ,eG2OcE,GHhQV,YGgQiCF,IAA2B2D,IAX3E,wC,kCCxOLmB,I,YA0CAC,I,mBA5Ca5C,EAAKM,2CAApBP,G,GAAAA,IAAKK,G,GAAAA,MAEb,SAAUuC,GAAmB/E,GAA7B,6EAE4B,OADlBgE,EAAiBhE,EAAjBgE,aADV,SAEkC7B,GAAI,gBAAD,OAAiB6B,IAFtD,WAEQD,EAFR,QAGyBhB,GAHzB,gBAII,OAJJ,SAIUC,YAAI,CAAE7C,KJFiB,oBIEQF,OJhBb,QIgBmCP,MAAOqE,EAAkBrE,QAJxF,wCAOE,OAPF,UAOQ8C,GAAM,yBAA0B,CAAEyC,cAAejB,IAPzD,QA+BE,OAtBQtD,EAAUqD,EAAkBtD,WAA5BC,OACFwE,MAAK,kBAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,MAC1CC,EAAmB5E,EAAMK,KAAI,SAAAC,GACjC,IAAMuE,EAAW,aAAO7E,GAClB8E,EAAU,IAAIC,MAAMN,KAAKO,IAAIH,EAAYI,OAAS,EAAG,IAAIC,KAAK,GAAG7E,KAAI,WACzE,IAAI8E,EAEJ,EAAG,CACD,IAAMC,EAAQP,EAAYI,OADzB,EAEUJ,EAAYQ,OAAOZ,KAAKa,MAAMb,KAAKE,SAAWS,GAAQ,GAAhED,EAFA,2BAGMA,EAAOlF,KAAOK,EAAKL,IAE5B,OAAOkF,KAIT,OAFAL,EAAQO,OAAOZ,KAAKa,MAAsB,EAAhBb,KAAKE,UAAe,EAAGrE,GAE1C,eACFA,EADL,CAEEwE,eA3BN,UA+BQxC,YAAI,CACR7C,KJ9B6B,oBI+B7BF,OJ5C0B,UI6C1BQ,WAAW,eACNsD,EAAkBtD,WADb,CAERC,MAAO4E,IAET/F,UAAW,IAtCf,yCA0CA,SAAUyF,GAAchF,GAAxB,qFAS2B,OAT3B,EACuCA,EAA7BiG,OAAUnF,EADpB,EACoBA,KAAM+E,EAD1B,EAC0BA,OAClB/C,EAAUhC,EAAKH,KAAOkF,EAAOlF,GAC/B,CACAuF,SAAU,GAEV,CACAC,OAAQ,GAPd,SASiC3D,GAAM,iBAAD,OAAkB1B,EAAKH,IAAMmC,GATnE,WASQsD,EATR,QAUwBrD,GAVxB,gBAWI,OAXJ,SAWUC,YAAI,CAAE7C,KJlDY,eIkDQF,OJjER,QIiE8BP,MAAO0G,EAAiB1G,QAXlF,wCAeE,OAfF,UAeQsD,YAAI,CACR7C,KJvDwB,eIwDxBF,OJtE0B,UIuE1BkB,UAAU,eACLiF,EAAiBjF,UADb,CAEPL,OACAuF,QAASvF,EAAKH,KAAOkF,EAAOlF,OArBlC,QAyB0C,OAzB1C,UAyBgDyD,aAAO,SAAArE,GAAK,MAAK,CAC7DT,iBAAkBS,EAAMkB,OAAO3B,iBAC/BC,UAAWQ,EAAMkB,OAAO1B,cA3B5B,oBAyBUD,EAzBV,EAyBUA,oBAAkBC,EAzB5B,EAyB4BA,WAKVD,EAAiBoB,MAAMiF,OAAS,GA9BlD,iBA+BI,OA/BJ,UA+BU3C,YAAI,CACR7C,KJtEqB,cIuErBF,OJtFwB,UIuFxBV,UAAWA,EAAY,IAlC7B,gCAqCI,OArCJ,UAqCUyD,YAAI,CACR7C,KJ3EuB,gBI4EvBF,OJ5FwB,YIqD9B,QAyCI,OAzCJ,UAyCU+C,YAAIE,kBAAQ,mBAzCtB,yCA6Ce,+EACb,OADa,SACPC,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MJtFe,sBIsFOE,GJrGV,YIqGwCF,IAA2B8E,IADlF,OAEb,OAFa,SAEP5B,aAAU,gBAAGhD,EAAH,EAAGA,KAAMF,EAAT,EAASA,OAAT,MJtFU,iBIsFYE,GJtGV,YIsGmCF,IAA2B+E,IAF7E,wC,gBC9FUsB,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CAACrG,IAAQsG,KAAqBvF,OAD3B,wCCGf,IAAMwF,GAAmBC,OAAOC,qCAAqC,CAAEC,iBAAiB,KAAYC,IAE9FC,GAAiBC,cACjBC,GAAWC,2BAAiBC,G,wCCInBC,eAAQ,MAAM,SAAAC,GAAQ,MAAK,CAAEA,cAA7BD,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,SAAxB,OAChB,kBAACC,GAAA,EAAD,CAAQF,UAAWA,GACjB,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAaC,QAAS,kBAAMP,EAASlE,kBAAQ,QAA7C,iBAEDoE,O,oBCaQH,eAAQ,MAAM,SAAAC,GAAQ,MAAK,CAAEA,cAA7BD,EAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,4BACb,qCACA,kBAAC,KAAD,CAEEO,eAAe,QACfC,SAAU,2EACVC,MAAM,gBACNC,UAAW,SAACpF,GAAD,OAAcyE,EAAS,CAAEjH,KRZlB,QQYsCF,ORhBpC,UQgB4D0C,cAChFqF,UAAW,SAACrF,GAAD,OAAcyE,EAAS,CAAEjH,KRblB,QQasCF,ORhBtC,QQgB4D0C,sB,oGCRlFsF,GAAkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OAAIA,EAAMC,gBAAkB,KAExB,kBAAC,KAAD,CACEC,KAAMC,KAAShB,UAAU,eACzBiB,MAAK,wBAA0C,IAAvBJ,EAAMC,eAAzB,OAMT,kBAAC,KAAD,CACEC,KAAMG,KAAUlB,UAAU,eAC1BiB,MAAK,wBAA0C,IAAvBJ,EAAMC,eAAzB,QAKLK,GAAiB,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAU/H,EAAb,EAAaA,YAAagI,EAA1B,EAA0BA,UAA1B,OACrB,kBAACoB,GAAA,EAAD,CAAWpB,UAAWA,GAAa,GAAIqB,OAAK,GACzCrJ,EAAY0B,KAAI,SAAAN,GAAU,OACzB,kBAACkI,GAAA,EAAD,CAAetB,UAAU,aACvB,yBAAKA,UAAU,eACZ5G,EAAWyH,OAAS,kBAAC,GAAD,CAAiBA,MAAOzH,EAAWyH,QACxD,kBAACU,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,KACLC,MAAM,OACNpB,QAAS,kBAAMP,EAAS4B,eAAK,gBAAD,OAAiBvI,EAAWE,QAH1D,QAKA,kBAACkI,GAAA,EAAD,CACEC,KAAK,KACLC,MAAM,OACNpB,QAAS,kBAAMP,EAAS4B,eAAK,WAAD,OAAYvI,EAAWE,QAHrD,YAOJ,oCACE,kBAAC,KAAD,CAAiByH,KAAMa,OADzB,IAC2CxI,EAAW6H,aAY9DE,GAAeU,aAAe,CAC5B7J,YAAa,IAGA8H,mBAAQ,MAAM,SAAAC,GAAQ,MAAK,CAAEA,cAA7BD,CAA0CqB,ICtDnDW,GAAW,SAAC,GAA0C,IAAxC/B,EAAuC,EAAvCA,SAAUgC,EAA6B,EAA7BA,UAAW/J,EAAkB,EAAlBA,YAKvC,OAJAgK,qBAAU,WACRjC,EAAS,CAAEjH,KVDyB,2BUCOF,OVXjB,cUYzB,IAECmJ,EACM,yBAAK/B,UAAU,eAAf,cAGLhI,EAAYsG,OAkBf,kBAAC2D,GAAA,EAAD,KACE,wBAAIjC,UAAU,cAAd,aACA,kBAACkC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,OAAQ,CAAC,KACZ,kDACA,kBAAC,GAAD,CAAgBpK,YAAaA,OArBjC,kBAACqK,GAAA,EAAD,CAAOC,QAAQ,GACb,kBAACC,GAAA,EAAD,KACE,uBAAGvC,UAAU,yBAAb,4BACA,kEACA,kBAACkC,GAAA,EAAD,CAAKlC,UAAU,0BACb,kBAACwB,GAAA,EAAD,CACEE,MAAM,UACNpB,QAAS,kBAAMP,EAASlE,kBAAQ,yBAFlC,iBA6BZiG,GAASD,aAAe,CACtBE,WAAW,EACX/J,YAAa,IAGf,IAKe8H,gBALS,SAACpH,GAAD,MAAY,CAClCV,YAAaU,EAAMS,SAASnB,YAC5B+J,UAAWrJ,EAAMD,QAAQL,SAGa,SAAA2H,GAAQ,MAAK,CAAEA,cAAxCD,CAAqDgC,I,kBCmDrDhC,gBAJS,SAACpH,GAAD,MAAY,CAClCb,cAAea,EAAMS,SAAStB,oBAAiB2K,MAGT,SAAAzC,GAAQ,MAAK,CAAEA,cAAxCD,EA3Gc,SAAC,GAKxB,IAHFC,EAGC,EAHDA,SAGC,IAFDlI,qBAEC,MAFe,CAAEyB,GAAI,KAAM2H,MAAO,IAElC,EACGwB,EAASC,cADZ,EAEiCC,mBAAS9K,GAF1C,oBAEIuB,EAFJ,KAEgBwJ,EAFhB,OAGqBD,mBAAS,CAAErJ,GAAI,KAAMuJ,YAAY,EAAM5F,MAAO,GAAIC,KAAM,KAH7E,oBAGIzD,EAHJ,KAGUqJ,EAHV,KAKHd,qBAAU,WACRY,EAAc/K,KACb,CACDA,EAAcyB,KAEhB0I,qBAAU,WACRc,EAAQ,CAAExJ,GAAI,KAAMuJ,YAAY,EAAM5F,MAAO,GAAIC,KAAM,OACtD,CACDrF,EAAcyB,GACdzB,EAAcwB,QAGhB,IAAM0J,EAAON,GAAUA,EAAOM,MAAQ,SAEtC,OACE,yBAAK/C,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,0BAEU,WAAT+C,GACD,kBAACb,GAAA,EAAD,KACE,kBAACc,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,SACA,kBAACiD,GAAA,EAAD,CACEjD,UAAU,yBACVkD,MAAO9J,EAAW6H,MAClBkC,YAAa,UACbC,SAAU,YAA4B,IAAfF,EAAc,EAAxBG,OAAUH,MACrBN,EAAc,eAAK/K,EAAN,CAAqBoJ,MAAOiC,QAG7C,yBAAKlD,UAAU,SACb,kBAACwB,GAAA,EAAD,CACEE,MAAM,UACNpB,QAAS,kBAAMP,EAAS,CAAEjH,KX/CT,oBW+CkCF,OXpDrC,UWoD6DQ,iBAF7E,YAOM,WAAT2J,GACD,oCACE,kBAACb,GAAA,EAAD,KACE,wBAAIlC,UAAU,eACXnI,EAAcwB,OAASxB,EAAcwB,MAAMK,KAAI,SAAAC,GAAI,OAClD,wBAAIqG,UAAU,oBAAoBrG,EAAKsD,YAI7C,kBAACiF,GAAA,EAAD,KACE,kBAACc,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,SACA,kBAACiD,GAAA,EAAD,CACEjD,UAAU,yBACVkD,MAAOzJ,EAAKwD,MACZkG,YAAa,QACbC,SAAU,YAA4B,IAAfF,EAAc,EAAxBG,OAAUH,MACrBJ,EAAQ,eAAKrJ,EAAN,CAAYoJ,YAAY,EAAO5F,MAAOiG,SAInD,kBAAChB,GAAA,EAAD,CAAKlC,UAAU,QACb,kBAACgD,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,QACA,kBAACiD,GAAA,EAAD,CACEjD,UAAU,yBACVkD,MAAOzJ,EAAKyD,KACZiG,YAAa,QACbC,SAAU,YAA4B,IAAfF,EAAc,EAAxBG,OAAUH,MACrBJ,EAAQ,eAAKrJ,EAAN,CAAYyD,KAAMgG,SAI/B,kBAAChB,GAAA,EAAD,CAAKlC,UAAU,+BACb,kBAACwB,GAAA,EAAD,CACEE,MAAM,UACNpB,QAAS,kBAAMP,EAAS,CACtBjH,KXtF2B,gCWuF3BF,OX7FY,UW8FZQ,WAAYvB,EACZ4B,WANJ,qBASA,kBAAC+H,GAAA,EAAD,CACEE,MAAM,UACNpB,QAAS,kBAAMP,EAASlE,kBAAQ,mBAFlC,kBC3CCiE,gBAJS,SAACpH,GAAD,MAAY,CAClCV,YAAaU,EAAMS,SAASnB,aAAe,OAGL,SAAA+H,GAAQ,MAAK,CAAEA,cAAxCD,EA9CY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAU/H,EAAkB,EAAlBA,YAKtC,OAJAgK,qBAAU,WACRjC,EAAS,CAAEjH,KZFkB,oBYEOF,OZXV,cYYzB,IAGD,yBAAKoH,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,oBAEA,kBAACkC,GAAA,EAAD,CAAKlC,UAAU,4BACb,kBAACwB,GAAA,EAAD,CACEE,MAAM,OACNpB,QAAS,kBAAMP,EAAS4B,eAAK,yBAF/B,sBAKF,kBAACP,GAAA,EAAD,CAAWpB,UAAU,OAAOqB,OAAK,GAC9BrJ,EAAY0B,KAAI,SAAAN,GAAU,OACzB,kBAACkI,GAAA,EAAD,CAAetB,UAAU,aACvB,kBAACuB,GAAA,EAAD,CAAavB,UAAU,eACrB,kBAACwB,GAAA,EAAD,CACEC,KAAK,KACLC,MAAM,OACNpB,QAAS,kBAAMP,EAAS4B,eAAK,gBAAD,OAAiBvI,EAAWE,QAH1D,QAKA,kBAACkI,GAAA,EAAD,CACEC,KAAK,KACLC,MAAM,OACNpB,QAAS,kBAAMP,EAAS4B,eAAK,WAAD,OAAYvI,EAAWE,QAHrD,WAMDF,EAAW6H,iB,gDCnCtBqC,GAAY,SAAC,GAAyC,IAAjCC,EAAgC,EAAtC9J,KAAgB+J,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,EAC/Bd,mBAASY,GADsB,oBACjD9J,EADiD,KAC3CqJ,EAD2C,KAMzD,OAJAd,qBAAU,WACRc,EAAQ,eAAKS,EAAN,CAAgBV,YAAY,OAClC,CAACU,IAGF,kBAAClB,GAAA,EAAD,CAAOC,QAAQ,GACb,kBAACoB,GAAA,EAAD,aACA,kBAACnB,GAAA,EAAD,KACE,kBAACoB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,KAAG,EAACC,QAAM,GACnB,kBAACd,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,SACA,yBAAKA,UAAU,SACb,kBAACiD,GAAA,EAAD,CACEjD,UAAU,mBACVkD,MAAOzJ,EAAKwD,MACZkG,YAAa,QACbC,SAAU,YAA4B,IAAfF,EAAc,EAAxBG,OAAUH,MACrBJ,EAAQ,eAAKrJ,EAAN,CAAYoJ,YAAY,EAAO5F,MAAOiG,UAKrD,kBAACU,GAAA,EAAD,CAAWC,KAAG,EAACC,QAAM,GACnB,kBAACd,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,QACA,yBAAKA,UAAU,SACb,kBAACiD,GAAA,EAAD,CACEjD,UAAU,mBACVkD,MAAOzJ,EAAKyD,KACZiG,YAAa,QACbC,SAAU,YAA4B,IAAfF,EAAc,EAAxBG,OAAUH,MACrBJ,EAAQ,eAAKrJ,EAAN,CAAYoJ,YAAY,EAAO3F,KAAMgG,YAOxD,kBAACa,GAAA,EAAD,KACE,kBAACvC,GAAA,EAAD,CAAQE,MAAM,UAAUpB,QAAS,kBAAMmD,MAAvC,UACA,kBAACjC,GAAA,EAAD,CAAQE,MAAM,UAAUpB,QAAS,kBAAMkD,EAAO/J,KAA9C,WAYR6J,GAAUzB,aAAe,CACvBpI,KAAM,CAAEuK,OAAO,IAGFV,UC0BAxD,eAAQ,MAAM,SAAAC,GAAQ,MAAK,CAAEA,cAA7BD,EAzEU,SAAC,GAA0C,EAAxCC,SAAyC,IAA/BtG,EAA8B,EAA9BA,KAAMwK,EAAwB,EAAxBA,SAAUR,EAAc,EAAdA,QAAc,EACtCd,mBAAS,MAD6B,oBAC3DnE,EAD2D,KACnD0F,EADmD,OAE5BvB,mBAAS,MAFmB,oBAE3D3K,EAF2D,KAE9CmM,EAF8C,KAG5DC,EAAmBC,uBAAY,kBAAMvJ,EAAI,uCAAsC,IAHnB,EAI1B6H,mBAAS,MAJiB,oBAI3DhG,EAJ2D,KAI7C2H,EAJ6C,KAMlE,OACE,kBAACjC,GAAA,EAAD,CAAOC,QAAQ,GACb,kBAACoB,GAAA,EAAD,KAAa,0BAAM1D,UAAU,eAAevG,EAAKwD,QACjD,kBAACsF,GAAA,EAAD,KACE,kBAACoB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,KAAG,EAACC,QAAM,GACnB,kBAACd,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,UACA,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,oBACf,kBAACiD,GAAA,EAAD,CACEnK,KAAK,QAAQkH,UAAU,mBAAmBuE,KAAK,SAC/CjE,QAAS,WACP4D,EdXY,QcYZE,IAAmBI,MAAK,gBAAGxM,EAAH,EAAGA,YAAH,OAAqBmM,EAAenM,SALlE,UAUF,yBAAKgI,UAAU,qBACb,2BAAOA,UAAU,oBACf,kBAACiD,GAAA,EAAD,CACEnK,KAAK,QAAQkH,UAAU,mBAAmBuE,KAAK,SAC/CjE,QAAS,WACP4D,EdrBY,QcsBZE,IAAmBI,MAAK,gBAAGxM,EAAH,EAAGA,YAAH,OAAqBmM,EAAenM,SALlE,UAUF,yBAAKgI,UAAU,qBACb,2BAAOA,UAAU,oBACf,kBAACiD,GAAA,EAAD,CACEnK,KAAK,QAAQkH,UAAU,mBAAmBuE,KAAK,SAC/CjE,QAAS,WACP4D,Ed/Ba,ScgCbC,EAAe,SALrB,YAWHnM,GACD,kBAAC4L,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,wBACA,4BAAQhD,UAAU,eAAeoD,SAAU,gBAAaF,EAAb,EAAGG,OAAUH,MAAb,OAA2BoB,EAAgBpB,KACnFlL,EAAY0B,KAAI,SAAAN,GAAU,OACzB,4BAAQ8J,MAAO9J,EAAWE,IAAKF,EAAW6H,cAOpD,kBAAC8C,GAAA,EAAD,KACE,kBAACvC,GAAA,EAAD,CAAQE,MAAM,UAAUpB,QAASmD,GAAjC,UACA,kBAACjC,GAAA,EAAD,CAAQE,MAAM,UAAUpB,QAAS,kBAAM2D,EAAS,CAAEtL,OAAQ6F,EAAQ3B,OAAQpD,EAAKH,GAAIqD,mBAAnF,WCoGOmD,gBAJS,SAACpH,GAAD,MAAY,CAClCU,WAAYV,EAAMS,SAASpB,gBAAkB,CAAEuB,GAAI,UAGb,SAAAyG,GAAQ,MAAK,CAAEA,cAAxCD,EAtJY,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAsB0E,EAAuB,EAAnCrL,WAC9BuD,EAAiB+F,cAAjB/F,aADiE,EAEnCgG,mBAAS,IAF0B,oBAEjEvJ,EAFiE,KAErDwJ,EAFqD,OAG3BD,oBAAS,GAHkB,oBAGjE+B,EAHiE,KAGjDC,EAHiD,OAInBhC,oBAAS,GAJU,oBAIjEiC,EAJiE,KAI7CC,EAJ6C,OAKvClC,mBAAS,MAL8B,oBAKjEY,EALiE,KAKvDuB,EALuD,OAMbnC,oBAAS,GANI,oBAMjEoC,EANiE,KAM1CC,EAN0C,KAkBzE,OAVAhD,qBAAU,WACRjC,EAAS,CAAEjH,KfxBgB,kBewBOF,OfpCR,UeoCgC+D,mBACzD,IACHqF,qBAAU,WACRY,EAAc6B,GACdE,GAAkB,GAClBE,GAAsB,GACtBG,GAAyB,KACxB,CAACP,IAEErL,GAAcA,EAAWC,MAK7B,oCACE,kBAAC6G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC6E,GAAA,EAAD,CACEC,KAAK,qBACL5E,QAAS,kBAAMP,EAASlE,kBAAQ,mBAFlC,yBAON,yBAAKmE,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,mBACA,kBAAC2D,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,KAAG,EAACC,QAAM,GACnB,kBAACd,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,SACA,yBAAKA,UAAU,SACb,kBAACiD,GAAA,EAAD,CACEjD,UAAU,mBACVkD,MAAO9J,EAAW6H,MAClBkC,YAAa,UACbC,SAAU,YAA4B,IAAfF,EAAc,EAAxBG,OAAUH,MACrBN,EAAc,eAAKxJ,EAAN,CAAkB6H,MAAOiC,MAExCiC,OAAQ,WACNpF,EAAS,CAAEjH,KfhEA,oBegEyBF,Of7E5B,Ue6EoDQ,oBAKpE,kBAACwK,GAAA,EAAD,CAAWC,KAAG,EAACC,QAAM,GACnB,kBAACd,GAAA,EAAD,CAAOhD,UAAU,mCAAjB,SACA,yBAAKA,UAAU,SACb,kBAACoB,GAAA,EAAD,MACIhI,EAAWC,OAAS,IAAIK,KAAI,SAAAC,GAAI,OAChC,kBAAC2H,GAAA,EAAD,CAAe8D,IAAKzL,EAAKL,GAAI0G,UAAU,kBACrC,kBAACwB,GAAA,EAAD,CACExB,UAAU,cACVyB,KAAK,KACLC,MAAM,UACNpB,QAAS,WACPwE,EAAYnL,GACZqL,GAAyB,KAN7B,UASA,kBAACxD,GAAA,EAAD,CACExB,UAAU,cACVyB,KAAK,KACLC,MAAM,OACNpB,QAAS,WACPwE,EAAYnL,GACZkL,GAAsB,KAN1B,QASClL,EAAKsD,cAQlB,kBAACiF,GAAA,EAAD,CAAKlC,UAAU,+BACb,kBAACwB,GAAA,EAAD,CACEE,MAAM,UACNpB,QAAS,kBAAMqE,GAAkB,KAFnC,mBAOLD,GACD,kBAAC,GAAD,CACEjB,QAAS,kBAAMkB,GAAkB,IACjCnB,OAAQ,SAAC/J,GACPsG,EAAS,CAAEjH,KfvHkB,4BeuHeF,Of9H1B,Ue8HkDQ,aAAYK,YAGnFmL,GAAsBrB,GACvB,kBAAC,GAAD,CACE9J,KAAM8J,EACNE,QAAS,kBAAMoB,GAAsB,IACrCrB,OAAQ,SAAC/J,GACPsG,EAAS,CAAEjH,Kf9HkB,4Be8HeF,OftI1B,UesIkDQ,aAAYK,YAGnFsL,GAAyBxB,GAC1B,kBAAC,GAAD,CACE9J,KAAM8J,EACNE,QAAS,kBAAMuB,GAAyB,IACxCf,SAAU,YAAuC,IAApCtL,EAAmC,EAAnCA,OAAQkE,EAA2B,EAA3BA,OAAQF,EAAmB,EAAnBA,aftHP,SeuHhBhE,EACFoH,EAAS,CACPjH,Kf7HS,Ye8HTF,OfjJc,UekJdiE,SACAO,iBAAkBqH,EAAiBnL,GACnCwD,eAAgBH,If5HA,Se8HThE,EACToH,EAAS,CACPjH,KfpIS,YeqITF,OfzJc,Ue0JdiE,SACAC,eAAgBH,IflIC,UeoIVhE,GACToH,EAAS,CACPjH,Kf1IU,ae2IVF,OfhKc,UeiKdiE,SACAC,eAAgB2H,EAAiBnL,UApHtC,yBAAK0G,UAAU,eAAf,iB,UCyFIF,gBARS,SAACpH,GAAD,MAAY,CAClCU,WAAYV,EAAMkB,OAAO3B,kBAAoB,CAAEoB,MAAO,IACtDnB,UAAWQ,EAAMkB,OAAO1B,WAAa,EACrCmN,cAAe3M,EAAMkB,OAAOzB,WAAWmG,OAAS5F,EAAMkB,OAAOzB,WAAWO,EAAMkB,OAAOzB,WAAWmG,OAAS,GAAK,KAC9GzE,SAAUnB,EAAMkB,OAAOC,SACvB1B,WAAYO,EAAMkB,OAAOzB,eAGa,SAAA4H,GAAQ,MAAK,CAAEA,cAAxCD,EAzHc,SAAC,GAAwG,IAAtGC,EAAqG,EAArGA,SAAU3G,EAA2F,EAA3FA,WAA2F,IAA/ElB,iBAA+E,MAAnE,EAAmE,MAAhEmN,qBAAgE,MAAhD,KAAgD,MAA1ClN,kBAA0C,MAA7B,KAA6B,MAAvB0B,gBAAuB,SAC3H8C,EAAiB+F,cAAjB/F,aAD2H,EAEzGgG,mBAAS,IAFgG,oBAE3HlJ,EAF2H,KAErHqJ,EAFqH,KAkBnI,OAdAd,qBAAU,WACJrF,GACFoD,EAAS,CAAEjH,KhBLgB,oBgBKSF,OhBpBZ,UgBoBoC+D,mBAE7D,CAACA,IACJqF,qBAAU,WACJ5I,GAAcA,EAAWC,OAC3ByJ,EAAQ1J,EAAWC,MAAM,MAE1B,CAACD,IACJ4I,qBAAU,WACRc,EAAQ1J,EAAWC,MAAMnB,MACxB,CAACkB,EAAYlB,IAEVkB,GAAcK,GAAQA,EAAK0E,QAK/B,oCACE,kBAAC+B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC6E,GAAA,EAAD,CACEC,KAAK,qBACL5E,QAAS,kBAAMP,EAASlE,kBAAQ,mBAFlC,yBAON,yBAAKmE,UAAU,aACb,kBAACkC,GAAA,EAAD,CAAKlC,UAAU,0BACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,cAAd,UACCqF,IAAkBxL,GACnB,kBAACqI,GAAA,EAAD,KACE,kBAACc,GAAA,EAAD,CAAOhD,UAAU,SAAjB,aACA,yBAAKA,UAAU,SAASqF,EAAc5L,KAAKwD,OAC3C,yBAAK+C,UAAU,SACZqF,EAAcrG,QACb,0CAEA,6CAKJnF,GACF,yBAAKmG,UAAU,sCACb,wBAAIA,UAAU,+CAA+CvG,EAAKwD,OAClE,kBAACiF,GAAA,EAAD,CAAKkD,IAAK3L,EAAKH,IACZG,EAAK0E,QAAQzE,KAAI,SAAC8E,GAAD,OAChB,kBAACgD,GAAA,EAAD,CACElB,QAAS,kBAAMP,EAAS,CACtBjH,KhBxDM,egByDNF,OhBzEQ,UgB0ERgG,OAAQ,CACNnF,OACA+E,aAGJ4G,IAAG,UAAK3L,EAAKH,GAAV,YAAgBkF,EAAOlF,IAC1BoI,MAAM,OACN1B,UAAU,QACVxB,EAAOtB,WAKdrD,GAAY1B,GACb,oCACE,yBAAK6H,UAAU,sCACb,4BAAK5G,EAAW6H,OAChB,kBAACqE,GAAA,EAAD,CAAOC,YAAU,GACf,+BACA,4BACE,6BACA,uCACA,qCACA,yCAGF,+BACCpN,EAAWuB,KAAI,gBAAGD,EAAH,EAAGA,KAASK,EAAZ,+BACd,4BACE,4BAAKL,EAAKwD,OACV,4BAAKnD,EAAU+E,UACf,4BAAK/E,EAAUgF,QACf,4BAAKhF,EAAU0L,iBAMvB,yBAAKxF,UAAU,qBACb,kBAACwB,GAAA,EAAD,CACEE,MAAM,OACNpB,QAAS,kBAAMP,EAASlE,kBAAQ,WAAD,OAAYzC,EAAWE,QAFxD,8BAhFL,yBAAK0G,UAAU,eAAf,iBCfLyF,GXJS,WACb,IAAMA,EAAQC,YACZC,EACAvG,GAAiBwG,YAAgBnG,GAAgBE,MAWnD,OARAF,GAAeoG,IAAI5G,IAQZwG,EWVKK,GA2BCC,G,iLAvBX,OACE,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,CAAQO,QAASnG,GACf,oCACE,kBAAC,GAAD,CAAWG,UAAU,wBACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9E,KAAK,IAAI+K,OAAK,EAACC,UAAWpE,KACjC,kBAAC,IAAD,CAAO5G,KAAK,SAAS+K,OAAK,EAACC,UAAWC,KACtC,kBAAC,IAAD,CAAOjL,KAAK,qBAAqB+K,OAAK,EAACC,UAAWE,KAClD,kBAAC,IAAD,CAAOlL,KAAK,2BAA2B+K,OAAK,EAACC,UAAWE,KACxD,kBAAC,IAAD,CAAOlL,KAAK,eAAe+K,OAAK,EAACC,UAAWG,KAC5C,kBAAC,IAAD,CAAOnL,KAAK,6BAA6B+K,OAAK,EAACC,UAAWI,KAC1D,kBAAC,IAAD,CAAOpL,KAAK,iBAAiB+K,OAAK,EAACC,UAAWK,KAC9C,kBAAC,IAAD,CAAOrL,KAAK,wBAAwB+K,OAAK,EAACC,UAAWK,KACrD,kBAAC,IAAD,CAAUC,GAAG,c,GAhBTC,aCREC,QACW,cAA7BrH,OAAOsH,SAASC,UAEe,UAA7BvH,OAAOsH,SAASC,UAEhBvH,OAAOsH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5C,MAAK,SAAA6C,GACjCA,EAAaC,kB","file":"static/js/main.02ef612b.chunk.js","sourcesContent":["import { createHashHistory } from 'history';\n\nexport default createHashHistory();\n","import { ACTION_LOGIN, STATUS_PENDING, STATUS_SUCCESS } from '../constants';\n\nconst initialState = {\n  loggedIn: false,\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  switch (action.type) {\n    case ACTION_LOGIN: {\n      if (action.status === STATUS_SUCCESS) {\n        localStorage.setItem('access_token', action.accessToken);\n        return {\n          ...state,\n          loggedIn: true,\n        };\n      } else {\n        localStorage.removeItem('access_token');\n        return {\n          ...state,\n          loggedIn: false,\n        };\n      }\n    }\n    default: return state;\n  }\n};\n","import {\n  CREATE_CARD_IN_NEW_COLLECTION,\n  CREATE_COLLECTION,\n  FETCH_COLLECTIONS,\n  VIEW_COLLECTION,\n  STATUS_PENDING,\n  STATUS_SUCCESS, CREATE_CARD_IN_COLLECTION, UPDATE_CARD_IN_COLLECTION, FETCH_RECENT_COLLECTIONS\n} from '../constants';\n\nconst initialState = {\n  newCollection: null,\n  newCard: null,\n  editCollection: null,\n  collections: [],\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  switch (action.type) {\n    case CREATE_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          newCollection: {\n            ...action.collection,\n            items: [],\n          },\n        };\n      }\n\n      return state;\n    }\n    case CREATE_CARD_IN_NEW_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        if (state.newCollection && action.collection.id === state.newCollection.id) {\n          return {\n            ...state,\n            newCollection: {\n              ...state.newCollection,\n              item_ids: state.newCollection.item_ids.concat(action.card.id),\n              items: state.newCollection.items.concat(action.card),\n            },\n            newCard: action.card,\n          };\n        }\n      }\n\n      return state;\n    }\n    case UPDATE_CARD_IN_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        const editCollection = {\n          ...action.collection,\n          items: action.collection.items.map(item => {\n            if (item.id === action.card.id) {\n              return action.card;\n            }\n\n            return item;\n          })\n        };\n\n        return {\n          ...state,\n          editCollection,\n        };\n      }\n      return state;\n    }\n    case FETCH_COLLECTIONS:\n    case FETCH_RECENT_COLLECTIONS: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          collections: action.collections,\n        };\n      }\n\n      return state;\n    }\n    case VIEW_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          editCollection: {\n            ...action.collection,\n          },\n        };\n      }\n\n      return state;\n    }\n    default: return state;\n  }\n};\n","import {\n  ANSWER_MATCH,\n  REVIEW_CARD,\n  REVIEW_COLLECTION, REVIEW_RESULT,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n} from '../constants';\n\nconst initialState = {\n  reviewCollection: null,\n  cardIndex: 0,\n  scorecards: [],\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  switch (action.type) {\n    case REVIEW_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          scorecards: [],\n          reviewCollection: {\n            ...action.collection,\n          },\n          cardIndex: action.cardIndex,\n          complete: false,\n        };\n      }\n\n      return state;\n    }\n    case REVIEW_CARD: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          cardIndex: action.cardIndex,\n        };\n      }\n\n      return state;\n    }\n    case ANSWER_MATCH: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          scorecards: state.scorecards.concat(action.scorecard),\n        };\n      }\n\n      return state;\n    }\n    case REVIEW_RESULT: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          complete: true,\n        };\n      }\n\n      return state;\n    }\n    default: return state;\n  }\n};\n","import { STATUS_ERROR, STATUS_PENDING, STATUS_SUCCESS } from '../constants';\n\nconst initialState = {\n  busy: false,\n  error: null,\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return {\n      ...state,\n      busy: true,\n    };\n  } else if (action.status === STATUS_ERROR) {\n    return {\n      ...state,\n      busy: false,\n      error: action.error,\n    };\n  } else if (action.status === STATUS_SUCCESS) {\n    return {\n      ...state,\n      error: null,\n      busy: false,\n    }\n  }\n\n  return initialState;\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport auth from './auth';\nimport coreData from './card-collection';\nimport review from './review';\nimport network from './network';\n\nexport default combineReducers({\n  routing: routerReducer,\n  network,\n  auth,\n  coreData,\n  review,\n});\n","export const STATUS_PENDING = 'pending';\nexport const STATUS_ERROR = 'error';\nexport const STATUS_SUCCESS = 'success';\n\nexport const ACTION_LOGIN = 'login';\nexport const CREATE_COLLECTION = 'create-collection';\nexport const CREATE_CARD_IN_NEW_COLLECTION = 'create-card-in-new-collection';\nexport const CREATE_CARD_IN_COLLECTION = 'create-card-in-collection';\nexport const UPDATE_CARD_IN_COLLECTION = 'update-card-in-collection';\nexport const FETCH_COLLECTIONS = 'fetch-collections';\nexport const FETCH_RECENT_COLLECTIONS = 'fetch-recent-collections';\nexport const FETCH_ORPHAN_CARDS = 'fetch-orphan-cards';\nexport const VIEW_COLLECTION = 'view-collection';\nexport const UPDATE_COLLECTION = 'update-collection';\nexport const ADD_CARD_TO_COLLECTION = 'add-card-to-collection';\nexport const REVIEW_COLLECTION = 'review-collection';\nexport const ANSWER_MATCH = 'answer-match';\nexport const REVIEW_CARD = 'review-card';\nexport const REVIEW_RESULT = 'review-result';\nexport const MOVE_CARD = 'move-card';\nexport const COPY_CARD = 'copy-card';\nexport const CLONE_CARD = 'clone-card';\n\nexport const CARD_ACTION_MOVE = 'MOVE';\nexport const CARD_ACTION_COPY = 'COPY';\nexport const CARD_ACTION_CLONE = 'CLONE';\n","async function request(url, method, body=null) {\n  const accessToken = localStorage.getItem('access_token');\n\n  const response = await fetch(url, {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      ...(accessToken ? {\n        Authorization: `Bearer ${accessToken}`,\n      } : {})\n    },\n    body: body && JSON.stringify(body),\n  });\n\n  if (response.status < 500) {\n    return response.json();\n  } else {\n    return response.text();\n  }\n}\n\nexport async function post(url, body) {\n  return request(url, 'post', body);\n}\n\nexport async function patch(url, body) {\n  return request(url, 'patch', body);\n}\n\nexport async function get(url) {\n  return request(url, 'get');\n}\n\nexport const make = (baseUrl) => ({\n  post(path, body) {\n    return post(`${baseUrl}${path}`, body);\n  },\n  patch(path, body) {\n    return patch(`${baseUrl}${path}`, body);\n  },\n  get(path) {\n    return get(`${baseUrl}${path}`);\n  }\n});\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { replace } from 'react-router-redux';\nimport { ACTION_LOGIN, STATUS_ERROR, STATUS_PENDING, STATUS_SUCCESS } from '../constants';\nimport { make } from './utils';\n\nconst { post } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doLogin(action) {\n  const { authData } = action;\n  const payload = yield post('/auth/register', {\n    id_token: authData.tokenId,\n  });\n\n  if (!payload.ok) {\n    yield put({ type: ACTION_LOGIN, status: STATUS_ERROR, error: payload.error });\n  } else {\n    yield put({ type: ACTION_LOGIN, status: STATUS_SUCCESS, accessToken: payload.access_token });\n    yield put(replace('/'));\n  }\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === ACTION_LOGIN && status === STATUS_PENDING, doLogin);\n}\n","import { put, select, takeEvery } from 'redux-saga/effects';\nimport {\n  CREATE_CARD_IN_NEW_COLLECTION,\n  CREATE_CARD_IN_COLLECTION,\n  CREATE_COLLECTION,\n  FETCH_COLLECTIONS,\n  FETCH_RECENT_COLLECTIONS,\n  UPDATE_COLLECTION,\n  VIEW_COLLECTION,\n  STATUS_ERROR,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n  UPDATE_CARD_IN_COLLECTION,\n  COPY_CARD,\n  MOVE_CARD,\n  CLONE_CARD\n} from '../constants';\nimport { make } from './utils';\nimport { replace } from 'react-router-redux';\n\nconst { get, patch, post } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doCreateCollection(action) {\n  const { collection } = action;\n  const payload = yield post('/collections', collection);\n\n  if (!payload.ok) {\n    yield put({ type: CREATE_COLLECTION, status: STATUS_ERROR, error: payload.error });\n  } else {\n    yield put({ type: CREATE_COLLECTION, status: STATUS_SUCCESS, collection: payload.collection });\n    yield put(replace('/create-collection/step-1'));\n  }\n}\n\nfunction* doAddNewCardToCollection(action) {\n  const { type, collection, card } = action;\n  const cardPayload = yield post('/cards', card);\n  if (!cardPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: cardPayload.error });\n    return;\n  }\n\n  const collectionPayload = yield patch(`/collections/${collection.id}`, {\n    item_ids: collection.item_ids.concat(cardPayload.card.id),\n  });\n  if (!cardPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  if (type === CREATE_CARD_IN_NEW_COLLECTION) {\n    yield put({\n      type,\n      status: STATUS_SUCCESS,\n      collection: collectionPayload.collection,\n      card: cardPayload.card,\n    });\n  } else {\n    yield doViewCollection({ collectionId: collectionPayload.collection.id });\n  }\n}\n\nfunction* doFetchCollections(action) {\n  const collectionsPayload = yield get('/collections?features=stats');\n  if (!collectionsPayload.ok) {\n    yield put({ type: FETCH_COLLECTIONS, status: STATUS_ERROR, error: collectionsPayload.error });\n    return;\n  }\n\n  yield put({\n    type: FETCH_COLLECTIONS,\n    status: STATUS_SUCCESS,\n    collections: collectionsPayload.collections,\n  });\n}\n\nfunction* doFetchRecentCollections(action) {\n  const { type } = action;\n  const collectionsPayload = yield get('/collections/recent?features=stats');\n  if (!collectionsPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: collectionsPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collections: collectionsPayload.collections,\n  });\n}\n\nfunction* doViewCollection(action) {\n  const { collectionId } = action;\n  const collectionPayload = yield get(`/collections/${collectionId}`);\n  if (!collectionPayload.ok) {\n    yield put({ type: VIEW_COLLECTION, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type: VIEW_COLLECTION,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n}\n\nfunction* doUpdateCollection(action) {\n  const { collection: { id, ...collection } } = action;\n  const collectionPayload = yield patch(`/collections/${id}`, collection);\n  if (!collectionPayload.ok) {\n    yield put({ type: UPDATE_COLLECTION, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type: UPDATE_COLLECTION,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n}\n\nfunction* doUpdateCardInCollection(action) {\n  const { type, collection, card: { id, ...card } } = action;\n  const cardPayload = yield patch(`/cards/${id}`, card);\n\n  if (!cardPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: cardPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collection,\n    card: cardPayload.card,\n  });\n}\n\nfunction* doCopyCardToCollection(action) {\n  const { type, cardId, toCollectionId } = action;\n  const editedCollectionId = yield select(state => state.coreData.editCollection.id);\n\n  const { collection } = yield get(`/collections/${toCollectionId}`);\n  if (!collection) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n  const collectionPayload = yield patch(`/collections/${toCollectionId}`, {\n    ...collection,\n    item_ids: collection.item_ids.concat(cardId),\n  });\n  if (!collectionPayload.ok) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n\n  yield doViewCollection({ collectionId: editedCollectionId });\n}\n\nfunction* doCloneCardToCollection(action) {\n  const { type, cardId, toCollectionId } = action;\n\n  const { card } = yield get(`/cards/${cardId}`);\n  if (!card) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: 'Card not found' });\n    return;\n  }\n  const { card: { id: clonedId } = {} } = yield post('/cards', {\n    front: card.front,\n    back: card.back,\n  });\n  if (!clonedId) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: 'Card not found' });\n    return;\n  }\n\n  const { collection } = yield get(`/collections/${toCollectionId}`);\n  if (!collection) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n  const collectionPayload = yield patch(`/collections/${toCollectionId}`, {\n    ...collection,\n    item_ids: collection.item_ids.map(item => item === cardId ? clonedId : item),\n  });\n  if (!collectionPayload.ok) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n\n  yield doViewCollection({ collectionId: toCollectionId });\n}\n\nfunction* doMoveCardBetweenCollections(action) {\n  const { type, cardId, fromCollectionId, toCollectionId } = action;\n\n  const { collection: fromCollection } = yield get(`/collections/${fromCollectionId}`);\n  if (!fromCollection) {\n    yield put({ type: MOVE_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n\n  const { collection: toCollection } = yield get(`/collections/${toCollectionId}`);\n  if (!toCollection) {\n    yield put({ type: MOVE_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n  const fromCollectionPayload = yield patch(`/collections/${fromCollectionId}`, {\n    ...fromCollection,\n    item_ids: fromCollection.item_ids.filter(item => item !== cardId),\n  });\n  if (!fromCollectionPayload.ok) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: fromCollectionPayload.error });\n    return;\n  }\n\n  const toCollectionPayload = yield patch(`/collections/${toCollectionId}`, {\n    ...toCollection,\n    item_ids: toCollection.item_ids.concat(cardId),\n  });\n  if (!toCollectionPayload.ok) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: toCollectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n  });\n\n  yield doViewCollection({ collectionId: fromCollectionId });\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === CREATE_COLLECTION && status === STATUS_PENDING, doCreateCollection);\n  yield takeEvery(({ type, status }) => (type === CREATE_CARD_IN_NEW_COLLECTION || type === CREATE_CARD_IN_COLLECTION)\n    && status === STATUS_PENDING, doAddNewCardToCollection);\n  yield takeEvery(({ type, status }) => type === UPDATE_CARD_IN_COLLECTION && status === STATUS_PENDING, doUpdateCardInCollection);\n  yield takeEvery(({ type, status }) => type === FETCH_COLLECTIONS && status === STATUS_PENDING, doFetchCollections);\n  yield takeEvery(({ type, status }) => type === FETCH_RECENT_COLLECTIONS && status === STATUS_PENDING, doFetchRecentCollections);\n  yield takeEvery(({ type, status }) => type === VIEW_COLLECTION && status === STATUS_PENDING, doViewCollection);\n  yield takeEvery(({ type, status }) => type === UPDATE_COLLECTION && status === STATUS_PENDING, doUpdateCollection);\n  yield takeEvery(({ type, status }) => type === COPY_CARD && status === STATUS_PENDING, doCopyCardToCollection);\n  yield takeEvery(({ type, status }) => type === MOVE_CARD && status === STATUS_PENDING, doMoveCardBetweenCollections);\n  yield takeEvery(({ type, status }) => type === CLONE_CARD && status === STATUS_PENDING, doCloneCardToCollection);\n}\n","import { put, select, takeEvery } from 'redux-saga/effects';\nimport { replace } from 'react-router-redux';\nimport {\n  ANSWER_MATCH, REVIEW_CARD,\n  REVIEW_COLLECTION, REVIEW_RESULT,\n  STATUS_ERROR,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n} from '../constants';\nimport { make } from './utils';\n\nconst { get, patch } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doReviewCollection(action) {\n  const { collectionId } = action;\n  const collectionPayload = yield get(`/collections/${collectionId}`);\n  if (!collectionPayload.ok) {\n    yield put({ type: REVIEW_COLLECTION, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n  yield patch(`/me/recent-collections`, { collection_id: collectionId });\n\n  const { items } = collectionPayload.collection;\n  items.sort(() => Math.round(Math.random() * 2 - 1));\n  const itemsWithChoices = items.map(item => {\n    const sourceItems = [...items];\n    const choices = new Array(Math.min(sourceItems.length - 1, 3)).fill(0).map(() => {\n      let choice;\n\n      do {\n        const count = sourceItems.length;\n        [choice] = sourceItems.splice(Math.floor(Math.random() * count), 1);\n      } while (choice.id === item.id);\n\n      return choice;\n    });\n    choices.splice(Math.floor(Math.random() * 3), 0, item);\n\n    return {\n      ...item,\n      choices,\n    };\n  });\n\n  yield put({\n    type: REVIEW_COLLECTION,\n    status: STATUS_SUCCESS,\n    collection: {\n      ...collectionPayload.collection,\n      items: itemsWithChoices,\n    },\n    cardIndex: 0,\n  });\n}\n\nfunction* doAnswerMatch(action) {\n  const { answer: { card, choice } } = action;\n  const payload = card.id === choice.id\n    ? {\n      corrects: 1,\n    }\n    : {\n      wrongs: 1,\n    };\n  const scorecardPayload = yield patch(`/me/scorecard/${card.id}`, payload);\n  if (!scorecardPayload.ok) {\n    yield put({ type: ANSWER_MATCH, status: STATUS_ERROR, error: scorecardPayload.error });\n    return;\n  }\n\n  yield put({\n    type: ANSWER_MATCH,\n    status: STATUS_SUCCESS,\n    scorecard: {\n      ...scorecardPayload.scorecard,\n      card,\n      correct: card.id === choice.id,\n    },\n  });\n\n  const { reviewCollection, cardIndex } = yield select(state => ({\n    reviewCollection: state.review.reviewCollection,\n    cardIndex: state.review.cardIndex,\n  }));\n\n  if (cardIndex < reviewCollection.items.length - 1) {\n    yield put({\n      type: REVIEW_CARD,\n      status: STATUS_SUCCESS,\n      cardIndex: cardIndex + 1,\n    });\n  } else {\n    yield put({\n      type: REVIEW_RESULT,\n      status: STATUS_SUCCESS,\n    });\n    yield put(replace('/review/result'));\n  }\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === REVIEW_COLLECTION && status === STATUS_PENDING, doReviewCollection);\n  yield takeEvery(({ type, status }) => type === ANSWER_MATCH && status === STATUS_PENDING, doAnswerMatch);\n}\n","import { all } from 'redux-saga/effects';\nimport auth from './auth';\nimport cardAndCollection from './card-collection';\nimport review from './review';\n\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield all([auth(), cardAndCollection(), review() /*, another saga here*/]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { compose } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'react-router-redux';\n\nimport appHistory from './appHistory';\nimport rootReducer from './reducers';\nimport rootSaga from \"./sagas\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ shouldHotReload: false }) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\nconst routerMW = routerMiddleware(appHistory);\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMW))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      console.log('Hot reloading reducers...');\n    });\n  }\n\n  return store;\n}\n","import React from 'react';\nimport { replace } from 'react-router-redux';\nimport { Nav, Navbar, NavbarBrand, NavItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst AppNavbar = ({ dispatch, className, children }) => (\n  <Navbar className={className}>\n    <Nav>\n      <NavItem>\n        <NavbarBrand onClick={() => dispatch(replace('/'))}>Karteikarten</NavbarBrand>\n      </NavItem>\n      {children}\n    </Nav>\n  </Navbar>\n);\n\nexport default connect(null, dispatch => ({ dispatch }))(AppNavbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\n\nimport { ACTION_LOGIN, STATUS_ERROR, STATUS_PENDING } from '../constants';\n\nconst LoginPage = ({ dispatch }) => (\n  <div className='container-fluid'>\n    <div className='row justify-content-center'>\n      <div className='col-7 karteikarten-login'>\n        <h1>Login</h1>\n        <GoogleLogin\n          // buttonText='Login with Google'\n          approvalPrompt='force'\n          clientId={'166406152582-k33pgvfgfc0e4u0ujsgak5ps2ps66d46.apps.googleusercontent.com'}\n          scope='profile email'\n          onSuccess={(authData) => dispatch({ type: ACTION_LOGIN, status: STATUS_PENDING, authData })}\n          onFailure={(authData) => dispatch({ type: ACTION_LOGIN, status: STATUS_ERROR, authData })}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default connect(null, dispatch => ({ dispatch }))(LoginPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup, ListGroup, ListGroupItem, Badge } from 'reactstrap';\nimport { push } from 'react-router-redux';\nimport { connect } from 'react-redux';\n\nimport { faSmile, faSadCry, faLayerGroup } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst HealthIndicator = ({ stats }) => {\n  if (stats.corrects_ratio >= 0.625) {\n    return (\n      <FontAwesomeIcon\n        icon={faSmile} className='text-success'\n        title={`Correct ratio ${stats.corrects_ratio * 100}%`}\n      />\n    );\n  }\n\n  return (\n    <FontAwesomeIcon\n      icon={faSadCry} className='text-warning'\n      title={`Correct ratio ${stats.corrects_ratio * 100}%`}\n    />\n  );\n};\n\nconst CollectionList = ({ dispatch, collections, className }) => (\n  <ListGroup className={className || ''} flush>\n    {collections.map(collection => (\n      <ListGroupItem className='pl-0 pr-0'>\n        <div className='float-right'>\n          {collection.stats && <HealthIndicator stats={collection.stats} />}\n          <ButtonGroup>\n            <Button\n              size='sm'\n              color='link'\n              onClick={() => dispatch(push(`/collections/${collection.id}`))}\n            >View</Button>\n            <Button\n              size='sm'\n              color='link'\n              onClick={() => dispatch(push(`/review/${collection.id}`))}\n            >Review</Button>\n          </ButtonGroup>\n        </div>\n        <>\n          <FontAwesomeIcon icon={faLayerGroup} /> {collection.title}\n        </>\n      </ListGroupItem>\n    ))}\n  </ListGroup>\n);\n\nCollectionList.propTypes = {\n  collections: PropTypes.array.isRequired,\n  className: PropTypes.string\n};\n\nCollectionList.defaultProps = {\n  collections: [],\n};\n\nexport default connect(null, dispatch => ({ dispatch }))(CollectionList);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { replace } from 'react-router-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Modal, ModalBody, Button } from 'reactstrap';\n\nimport { FETCH_RECENT_COLLECTIONS, STATUS_PENDING } from '../constants';\nimport CollectionList from '../components/CollectionList';\n\nconst HomePage = ({ dispatch, isLoading, collections }) => {\n  useEffect(() => {\n    dispatch({ type: FETCH_RECENT_COLLECTIONS, status: STATUS_PENDING });\n  }, []);\n\n  if (isLoading) {\n    return (<div className=\"text-center\">Loading...</div>);\n  }\n\n  if (!collections.length) {\n    return (\n      <Modal isOpen={true}>\n        <ModalBody>\n          <p className=\"display-4 text-center\">Welcome to Karteikarten!</p>\n          <p>Let's create your first collection!</p>\n          <Row className='justify-content-center'>\n            <Button\n              color=\"primary\"\n              onClick={() => dispatch(replace('/create-collection'))}\n            >Let's go!</Button>\n          </Row>\n        </ModalBody>\n      </Modal>\n    );\n  }\n\n  return (\n    <Container>\n      <h1 className='page-title'>Dashboard</h1>\n      <Row>\n        <Col widths={[12]}>\n          <h2>Recent collections</h2>\n          <CollectionList collections={collections} />\n        </Col>\n      </Row>\n      {/* TODO: Either statistics or progress or challenge others */}\n    </Container>\n  );\n};\n\nHomePage.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  collections: PropTypes.array.isRequired,\n};\n\nHomePage.defaultProps = {\n  isLoading: true,\n  collections: [],\n};\n\nconst mapStateToProps = (state) => ({\n  collections: state.coreData.collections,\n  isLoading: state.network.busy,\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(HomePage);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Label, Button, Input } from 'reactstrap';\n\nimport { CREATE_CARD_IN_NEW_COLLECTION, CREATE_COLLECTION, STATUS_PENDING } from '../constants';\nimport { useParams } from 'react-router';\nimport { replace } from 'react-router-redux';\n\nconst CreateCollectionPage = (\n  {\n    dispatch,\n    newCollection = { id: null, title: '' },\n  }\n) => {\n  const params = useParams();\n  const [collection, setCollection] = useState(newCollection);\n  const [card, setCard] = useState({ id: null, isPristine: true, front: '', back: '' });\n\n  useEffect(() => {\n    setCollection(newCollection);\n  }, [\n    newCollection.id,\n  ]);\n  useEffect(() => {\n    setCard({ id: null, isPristine: true, front: '', back: '' });\n  }, [\n    newCollection.id,\n    newCollection.items,\n  ]);\n\n  const step = params && params.step || 'step-0';\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-12'>\n          <h1 className='page-title'>Create Your Collection</h1>\n\n          {step === 'step-0' &&\n          <Row>\n            <Label className='col-form-label text-right col-3'>Title</Label>\n            <Input\n              className='col-7 font-weight-bold'\n              value={collection.title}\n              placeholder={'No name'}\n              onChange={({ target: { value } }) => {\n                setCollection({ ...newCollection, title: value })\n              }}\n            />\n            <div className='col-2'>\n              <Button\n                color='primary'\n                onClick={() => dispatch({ type: CREATE_COLLECTION, status: STATUS_PENDING, collection })}\n              >Create</Button>\n            </div>\n          </Row>\n          }\n          {step === 'step-1' &&\n          <>\n            <Row>\n              <ul className='list-inline'>\n                {newCollection.items && newCollection.items.map(item => (\n                  <li className='list-inline-item'>{item.front}</li>\n                ))}\n              </ul>\n            </Row>\n            <Row>\n              <Label className='col-form-label text-right col-3'>Front</Label>\n              <Input\n                className='col-7 font-weight-bold'\n                value={card.front}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, isPristine: false, front: value })\n                }}\n              />\n            </Row>\n            <Row className='pt-2'>\n              <Label className='col-form-label text-right col-3'>Back</Label>\n              <Input\n                className='col-7 font-weight-bold'\n                value={card.back}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, back: value })\n                }}\n              />\n            </Row>\n            <Row className='justify-content-center pt-3'>\n              <Button\n                color='primary'\n                onClick={() => dispatch({\n                  type: CREATE_CARD_IN_NEW_COLLECTION,\n                  status: STATUS_PENDING,\n                  collection: newCollection,\n                  card,\n                })}\n              >Add to Collection</Button>\n              <Button\n                color='default'\n                onClick={() => dispatch(replace('/collections'))}\n              >Finish</Button>\n            </Row>\n          </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  newCollection: state.coreData.newCollection || undefined,\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CreateCollectionPage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { push, replace } from 'react-router-redux';\nimport {\n  Row, ListGroup, ListGroupItem, ButtonGroup, Button,\n} from 'reactstrap';\n\nimport { FETCH_COLLECTIONS, STATUS_PENDING } from '../constants';\n\nconst CollectionListPage = ({ dispatch, collections }) => {\n  useEffect(() => {\n    dispatch({ type: FETCH_COLLECTIONS, status: STATUS_PENDING });\n  }, []);\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-12'>\n          <h1 className='page-title'>Your Collections</h1>\n\n          <Row className='justify-content-end pr-3'>\n            <Button\n              color='link'\n              onClick={() => dispatch(push('/create-collection'))}\n            >Create Collection</Button>\n          </Row>\n          <ListGroup className='pt-3' flush>\n            {collections.map(collection => (\n              <ListGroupItem className='pl-0 pr-0'>\n                <ButtonGroup className='float-right'>\n                  <Button\n                    size='sm'\n                    color='link'\n                    onClick={() => dispatch(push(`/collections/${collection.id}`))}\n                  >View</Button>\n                  <Button\n                    size='sm'\n                    color='link'\n                    onClick={() => dispatch(push(`/review/${collection.id}`))}\n                  >Review</Button>\n                </ButtonGroup>\n                {collection.title}\n              </ListGroupItem>\n            ))}\n          </ListGroup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  collections: state.coreData.collections || [],\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CollectionListPage);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input\n} from 'reactstrap';\n\nconst CardModal = ({ card: editCard, onSave, onClose }) => {\n  const [ card, setCard ] = useState(editCard);\n  useEffect(() => {\n    setCard({ ...editCard, isPristine: true });\n  }, [editCard]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader>Card</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup row inline>\n            <Label className='col-form-label text-right col-3'>Front</Label>\n            <div className='col-9'>\n              <Input\n                className='font-weight-bold'\n                value={card.front}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, isPristine: false, front: value })\n                }}\n              />\n            </div>\n          </FormGroup>\n          <FormGroup row inline>\n            <Label className='col-form-label text-right col-3'>Back</Label>\n            <div className='col-9'>\n              <Input\n                className='font-weight-bold'\n                value={card.back}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, isPristine: false, back: value })\n                }}\n              />\n            </div>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='default' onClick={() => onClose()}>Cancel</Button>\n        <Button color='primary' onClick={() => onSave(card)}>Save</Button>\n      </ModalFooter>\n    </Modal>\n  )\n};\n\nCardModal.propTypes = {\n  card: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nCardModal.defaultProps = {\n  card: { isNew: true },\n};\n\nexport default CardModal;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, ModalHeader, ModalBody, ModalFooter, Button,\n  Form, FormGroup, Label,\n  Input,\n} from 'reactstrap';\nimport { get } from '../sagas/utils';\n\nimport {\n  CARD_ACTION_MOVE,\n  CARD_ACTION_COPY,\n  CARD_ACTION_CLONE,\n} from '../constants';\n\nconst CardActionsModal = ({ dispatch, card, onAccept, onClose }) => {\n  const [choice, setChoice] = useState(null);\n  const [collections, setCollections] = useState(null);\n  const fetchCollections = useCallback(() => get('http://localhost:8080/collections'), []);\n  const [collectionId, setCollectionId] = useState(null);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader><span className='font-italic'>{card.front}</span></ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup row inline>\n            <Label className='col-3 col-form-label text-right'>Action</Label>\n            <div className='form-check-inline'>\n              <label className='form-check-label'>\n                <Input\n                  type='radio' className='form-check-input' name='action'\n                  onClick={() => {\n                    setChoice(CARD_ACTION_MOVE);\n                    fetchCollections().then(({ collections }) => setCollections(collections));\n                  }}\n                /> Move\n              </label>\n            </div>\n            <div className='form-check-inline'>\n              <label className='form-check-label'>\n                <Input\n                  type='radio' className='form-check-input' name='action'\n                  onClick={() => {\n                    setChoice(CARD_ACTION_COPY);\n                    fetchCollections().then(({ collections }) => setCollections(collections));\n                  }}\n                /> Copy\n              </label>\n            </div>\n            <div className='form-check-inline'>\n              <label className='form-check-label'>\n                <Input\n                  type='radio' className='form-check-input' name='action'\n                  onClick={() => {\n                    setChoice(CARD_ACTION_CLONE);\n                    setCollections(null);\n                  }}\n                /> Clone\n              </label>\n            </div>\n          </FormGroup>\n          {collections &&\n          <FormGroup>\n            <Label>Move/Copy to...</Label>\n            <select className='form-control' onChange={({ target: { value } }) => setCollectionId(value)}>\n              {collections.map(collection => (\n                <option value={collection.id}>{collection.title}</option>\n              ))}\n            </select>\n          </FormGroup>\n          }\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='default' onClick={onClose}>Cancel</Button>\n        <Button color='primary' onClick={() => onAccept({ action: choice, cardId: card.id, collectionId })}>OK</Button>\n      </ModalFooter>\n    </Modal>\n  )\n};\n\nCardActionsModal.propTypes = {\n  card: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAccept: PropTypes.func.isRequired,\n};\n\nexport default connect(null, dispatch => ({ dispatch }))(CardActionsModal);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ListGroup from 'reactstrap/es/ListGroup';\nimport ListGroupItem from 'reactstrap/es/ListGroupItem';\nimport { useParams } from 'react-router';\nimport { replace } from 'react-router-redux';\n\nimport {\n  VIEW_COLLECTION,\n  UPDATE_COLLECTION,\n  STATUS_PENDING,\n  CREATE_CARD_IN_COLLECTION,\n  UPDATE_CARD_IN_COLLECTION,\n  MOVE_CARD,\n  COPY_CARD,\n  CLONE_CARD,\n  CARD_ACTION_COPY, CARD_ACTION_MOVE, CARD_ACTION_CLONE,\n} from '../constants';\nimport {\n  Navbar, Nav, NavItem, NavLink,\n  Button, Input, Label, Row,\n  Form, FormGroup,\n} from 'reactstrap';\n\nimport CardModal from '../components/CardModal';\nimport CardActionsModal from '../components/CardActionsModal';\n\nconst CollectionEditPage = ({ dispatch, collection: editedCollection }) => {\n  const { collectionId } = useParams();\n  const [ collection, setCollection ] = useState({});\n  const [ cardModalShown, setCardModalShown ] = useState(false);\n  const [ editCardModalShown, setEditCardModalShown ] = useState(false);\n  const [ editCard, setEditCard ] = useState(null);\n  const [ cardActionsModalShown, setCardActionsModalShown ] = useState(false);\n\n  useEffect(() => {\n    dispatch({ type: VIEW_COLLECTION, status: STATUS_PENDING, collectionId });\n  }, []);\n  useEffect(() => {\n    setCollection(editedCollection);\n    setCardModalShown(false);\n    setEditCardModalShown(false);\n    setCardActionsModalShown(false);\n  }, [editedCollection]);\n\n  if (!(collection && collection.items)) {\n    return <div className='text-center'>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Navbar>\n        <Nav>\n          <NavItem>\n            <NavLink\n              href='javascript: void 0'\n              onClick={() => dispatch(replace('/collections'))}\n            >&lsaquo; Collections</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12'>\n            <h1 className='page-title'>Your Collection</h1>\n            <Form>\n              <FormGroup row inline>\n                <Label className='col-form-label text-right col-3'>Title</Label>\n                <div className='col-9'>\n                  <Input\n                    className='font-weight-bold'\n                    value={collection.title}\n                    placeholder={'No name'}\n                    onChange={({ target: { value } }) => {\n                      setCollection({ ...collection, title: value });\n                    }}\n                    onBlur={() => {\n                      dispatch({ type: UPDATE_COLLECTION, status: STATUS_PENDING, collection })\n                    }}\n                  />\n                </div>\n              </FormGroup>\n              <FormGroup row inline>\n                <Label className='col-form-label text-right col-3'>Cards</Label>\n                <div className=\"col-9\">\n                  <ListGroup>\n                    {(collection.items || []).map(item => (\n                      <ListGroupItem key={item.id} className='pt-1 pb-1 pr-0'>\n                        <Button\n                          className='float-right'\n                          size='sm'\n                          color='default'\n                          onClick={() => {\n                            setEditCard(item);\n                            setCardActionsModalShown(true);\n                          }}\n                        >&hellip;</Button>\n                        <Button\n                          className='float-right'\n                          size='sm'\n                          color='link'\n                          onClick={() => {\n                            setEditCard(item);\n                            setEditCardModalShown(true);\n                          }}\n                        >View</Button>\n                        {item.front}\n                      </ListGroupItem>\n                    ))}\n                  </ListGroup>\n                </div>\n              </FormGroup>\n            </Form>\n\n            <Row className='pt-3 justify-content-center'>\n              <Button\n                color='primary'\n                onClick={() => setCardModalShown(true)}\n              >Add new Card</Button>\n            </Row>\n          </div>\n        </div>\n        {cardModalShown &&\n        <CardModal\n          onClose={() => setCardModalShown(false)}\n          onSave={(card) => {\n            dispatch({ type: CREATE_CARD_IN_COLLECTION, status: STATUS_PENDING, collection, card });\n          }}\n        />}\n        {editCardModalShown && editCard &&\n        <CardModal\n          card={editCard}\n          onClose={() => setEditCardModalShown(false)}\n          onSave={(card) => {\n            dispatch({ type: UPDATE_CARD_IN_COLLECTION, status: STATUS_PENDING, collection, card });\n          }}\n        />}\n        {cardActionsModalShown && editCard &&\n        <CardActionsModal\n          card={editCard}\n          onClose={() => setCardActionsModalShown(false)}\n          onAccept={({ action, cardId, collectionId }) => {\n            if (action === CARD_ACTION_MOVE) {\n              dispatch({\n                type: MOVE_CARD,\n                status: STATUS_PENDING,\n                cardId,\n                fromCollectionId: editedCollection.id,\n                toCollectionId: collectionId\n              });\n            } else if (action === CARD_ACTION_COPY) {\n              dispatch({\n                type: COPY_CARD,\n                status: STATUS_PENDING,\n                cardId,\n                toCollectionId: collectionId\n              });\n            } else if (action === CARD_ACTION_CLONE) {\n              dispatch({\n                type: CLONE_CARD,\n                status: STATUS_PENDING,\n                cardId,\n                toCollectionId: editedCollection.id,\n              });\n            }\n          }}\n        />\n        }\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  collection: state.coreData.editCollection || { id: null },\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CollectionEditPage);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { replace } from 'react-router-redux';\n\nimport {\n  STATUS_PENDING,\n  REVIEW_COLLECTION,\n  ANSWER_MATCH,\n} from '../constants';\nimport { Navbar, Nav, NavItem, NavLink, Button, Row, Label, Table } from 'reactstrap';\n\nimport '../App.css';\n\nconst CollectionReviewPage = ({ dispatch, collection, cardIndex = 0, lastScorecard = null, scorecards = null, complete = false }) => {\n  const { collectionId } = useParams();\n  const [ card, setCard ] = useState({});\n\n  useEffect(() => {\n    if (collectionId) {\n      dispatch({ type: REVIEW_COLLECTION, status: STATUS_PENDING, collectionId });\n    }\n  }, [collectionId]);\n  useEffect(() => {\n    if (collection && collection.items) {\n      setCard(collection.items[0]);\n    }\n  }, [collection]);\n  useEffect(() => {\n    setCard(collection.items[cardIndex]);\n  }, [collection, cardIndex]);\n\n  if (!(collection && card && card.choices)) {\n    return <div className='text-center'>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Navbar>\n        <Nav>\n          <NavItem>\n            <NavLink\n              href='javascript: void 0'\n              onClick={() => dispatch(replace('/collections'))}\n            >&lsaquo; Collections</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n      <div className='container'>\n        <Row className='justify-content-center'>\n          <div className='col-12 col-sm-10'>\n            <h1 className='page-title'>Review</h1>\n            {lastScorecard && !complete &&\n            <Row>\n              <Label className='col-4'>Last card</Label>\n              <div className='col-4'>{lastScorecard.card.front}</div>\n              <div className='col-4'>\n                {lastScorecard.correct ?\n                  <span>Correct!</span>\n                  :\n                  <span>Wrong!!!</span>\n                }\n              </div>\n            </Row>\n            }\n            {!complete &&\n            <div className='w-100 p-3 p-sm-5 karteikarten-card'>\n              <h3 className='display-4 mb-5 text-center font-weight-bold'>{card.front}</h3>\n              <Row key={card.id}>\n                {card.choices.map((choice) => (\n                  <Button\n                    onClick={() => dispatch({\n                      type: ANSWER_MATCH,\n                      status: STATUS_PENDING,\n                      answer: {\n                        card,\n                        choice,\n                      }\n                    })}\n                    key={`${card.id}-${choice.id}`}\n                    color='link'\n                    className='w-50'\n                  >{choice.back}</Button>\n                ))}\n              </Row>\n            </div>\n            }\n            {complete && scorecards &&\n            <>\n              <div className='w-100 p-3 p-sm-5 karteikarten-card'>\n                <h2>{collection.title}</h2>\n                <Table responsive>\n                  <thead>\n                  <tr>\n                    <th></th>\n                    <th>Correct</th>\n                    <th>Wrong</th>\n                    <th>Skipped</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {scorecards.map(({ card, ...scorecard }) => (\n                    <tr>\n                      <td>{card.front}</td>\n                      <td>{scorecard.corrects}</td>\n                      <td>{scorecard.wrongs}</td>\n                      <td>{scorecard.skippeds}</td>\n                    </tr>\n                  ))}\n                  </tbody>\n                </Table>\n              </div>\n              <div className=\"w-100 text-center\">\n                <Button\n                  color='link'\n                  onClick={() => dispatch(replace(`/review/${collection.id}`))}\n                >Retry the collection</Button>\n              </div>\n            </>\n            }\n          </div>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  collection: state.review.reviewCollection || { items: [] },\n  cardIndex: state.review.cardIndex || 0,\n  lastScorecard: state.review.scorecards.length ? state.review.scorecards[state.review.scorecards.length - 1] : null,\n  complete: state.review.complete,\n  scorecards: state.review.scorecards,\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CollectionReviewPage);\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { Router, Route, Switch, Redirect } from 'react-router';\nimport 'bootstrap/scss/bootstrap.scss';\n\nimport appHistory from './appHistory';\nimport configureStore from './store';\n\nimport AppNavbar from './components/AppNavbar';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport CreateCollectionPage from './pages/CreateCollectionPage';\nimport CollectionListPage from './pages/CollectionListPage';\nimport CollectionEditPage from './pages/CollectionEditPage';\nimport CollectionReviewPage from './pages/CollectionReviewPage';\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={appHistory}>\n          <>\n            <AppNavbar className=\"karteikarten-topnav\" />\n            <Switch>\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/login\" exact component={LoginPage} />\n              <Route path=\"/create-collection\" exact component={CreateCollectionPage} />\n              <Route path=\"/create-collection/:step\" exact component={CreateCollectionPage} />\n              <Route path=\"/collections\" exact component={CollectionListPage} />\n              <Route path=\"/collections/:collectionId\" exact component={CollectionEditPage} />\n              <Route path=\"/review/result\" exact component={CollectionReviewPage} />\n              <Route path=\"/review/:collectionId\" exact component={CollectionReviewPage} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}